<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.baisee.oa.dao.baisee.BaiseeTransactionMapper">
	<!-- 详细账单 -->
	<resultMap type="cn.baisee.oa.model.DetailAccount" id="detailAccount">
		<id column="Service_serial_number" property="serviceID" />
		<result column="transaction_serial_number" property="transactionID" />
		<result column="userId" property="userID" />
		<result column="single_amount" property="amount" />
		<result column="Transaction_Type" property="transactionType" />
		<result column="remarks" property="remarks" />
		<result column="Update_Time" property="time" />
	</resultMap>
	<select id="selectSN" resultType="java.lang.String">
		select pkval('SN')
	</select>
	<select id="selectNO" resultType="java.lang.String">
		select pkval('NO')
	</select>
	<!--添加信息到缴费流水表 void insertPayment(Map<String, Object> map) -->
	<insert id="insertPayment" parameterType="java.util.Map">
		insert
		into
		baisee_flow_total (transaction_serial_number,
		Trading_hours,Transaction_status,Transaction_amount,Operator,Last_update_time)values
		(#{SNID},DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'),#{status},#{totalMoney,jdbcType=VARCHAR},#{operator,jdbcType=VARCHAR},DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		)
	</insert>
	<!-- void insePayment( Map<String, Object> map); -->
	<insert id="insePayment" parameterType="java.util.Map">
		insert
		into
		baisee_flow_total (transaction_serial_number,
		Trading_hours,Transaction_status,Transaction_amount,Operator,Last_update_time)values
		(#{SNID},DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'),#{status},#{amount,jdbcType=VARCHAR},#{operator,jdbcType=VARCHAR},DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		)
	</insert>
	<!-- 添加信息到缴费业务表void insertPaymentService(Map<String, Object> map); -->
	<insert id="insertPaymentService" parameterType="java.util.Map">
		insert into
		baisee_flow_business(Service_serial_number,transaction_serial_number,
		userId,single_amount,Transaction_Type,remarks,Update_Time)values
		(#{NOID},#{SNID},#{userID},#{amount},#{type},#{remarks},
		<choose>
		<when test="returnTime!=null and returnTime!=''">
		#{returnTime,jdbcType=VARCHAR}
		</when>
		<otherwise>
		DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		</otherwise>
		</choose>
		)
	</insert>
	<!-- 添加信息到缴费优惠表void insertPaymentDiscounts(Map<String, Object> map); -->
	<insert id="insertPaymentDiscounts" parameterType="java.util.Map">
		insert into
		baisee_flow_discounts(Preferential_number,Service_serial_number,Discount_Amount,Preferential_type,
		Preferential_ID,transaction_serial_number,Update_Time)values(
		pkval('PF'),#{NOID},#{discountAmount},#{discountsType},pkval('DC'),#{SNID},DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		)
	</insert>
	<!-- 添加信息到抵充流水表void insertFillFlowMeter(Map<String, Object> map); -->
	<insert id="insertFillFlowMeter" parameterType="java.util.Map">
		insert into
		baisee_flow_takeout(
		Offset_serial_number,transaction_serial_number,Service_serial_number,Take_out_money,
		Offset_source,balance,Offset_the_date,Update_Time
		)values(
		pkval('OS'),#{SNID},#{NOID},#{takeOut},#{source},#{balance},DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'),DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		)

	</insert>
	<!--添加信息到预缴费表 void insertAdvancePaymentTable(Map<String, Object> map); -->
	<insert id="insertAdvancePaymentTable" parameterType="java.util.Map">
		insert into
		baisee_flow_prepay(
		userId,prepay_type,Prepaid_amount,prepay_Time,Update_Time
		)values(
		#{userID},#{type},#{amount},DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'),DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		)
	</insert>
	<!-- 删除预交表用户信息void deletePrepayByID(String userID); -->
	<delete id="deletePrepayByID" parameterType="java.lang.String">
		DELETE FROM
		baisee_flow_prepay where userId=#{userID}
	</delete>
	<!-- 查看用户是否存在String selectPrepayByID(String userID); -->
	<select id="selectPrepayByID" resultType="java.lang.String"
		parameterType="java.lang.String">
		select userId from
		baisee_flow_prepay
		where
		userId=#{userID}
	</select>
	<!-- 根据用户编号查看预交的费用 String selectPrepay(String userId); -->
	<select id="selectPrepay" resultType="java.lang.String"
		parameterType="java.lang.String">
		select Prepaid_amount from
		baisee_flow_prepay
		where
		userId=#{userID}
	</select>
	<!--修改预交费用 void updatePrepay(@Param("userID")String userID,@Param("amount")String 
		amount); -->
	<update id="updatePrepay" parameterType="java.lang.String">
		UPDATE
		baisee_flow_prepay SET prepaid_amount=#{amount} where
		userId=#{userID}

	</update>
	<!--根据用户ID查询详细账单List<DetailAccount> selectDetailAccount(@Param("userID")String 
		userID,@Param("type")String type); -->
	<select id="selectDetailAccount" resultMap="detailAccount"
		parameterType="java.lang.String">
		select * from baisee_flow_business where
		userId=#{userID}
		and Transaction_Type=#{type}
	</select>
	<!--根据用户编号查询子表总金额String selectPaymentAmount(@Param("userID")String userID,@Param("type")String 
		type); ; -->
	<select id="selectPaymentAmount" parameterType="java.lang.String"
		resultType="java.lang.String">
		select SUM(b.single_amount+if(isnull(takeout.take_out_money),0,takeout.take_out_money)) 
 from baisee_flow_business b LEFT JOIN baisee_flow_takeout takeout ON b.service_serial_number=takeout.service_serial_number
WHERE b.userId=#{userID} and b.Transaction_Type=#{type}
	</select>
	<!--根据用户编号和交易类型查询总金额 String selectTotalMoney(@Param("userID")String userID,@Param("type")String 
		type); -->
	<select id="selectTotalMoney" parameterType="java.lang.String"
		resultType="java.lang.String">
		SELECT
		SUM(t.transaction_amount+if(isnull(o.take_out_money),0,o.take_out_money))
		FROM baisee_flow_total t left JOIN baisee_flow_business b
		ON t.transaction_serial_number=b.transaction_serial_number
		left JOIN baisee_flow_takeout o ON
		t.transaction_serial_number=o.transaction_serial_number
		WHERE b.userid=#{userID} AND b.transaction_type=#{type}
	</select>
	<!-- 查看返回的费用List<DetailAccount> selectReturnFee(); -->
	<select id="selectReturnFee" resultType="cn.baisee.oa.model.DetailAccount">
		SELECT s.single_amount
		amount,s.remarks remarks,s.Update_Time
		time,t.Operator userID FROM
		baisee_flow_business s left join
		baisee_flow_total t ON
		s.transaction_serial_number = t.transaction_serial_number WHERE
		s.userID=#{userID} AND
		s.Transaction_Type=#{type}
	</select>
	<!--根据用户编号和交易类型查询总金额 List<DetailAccount> readTotalMoney(@Param("userID")String 
		userID,@Param("type")String type); -->
	<select id="readTotalMoney" parameterType="java.lang.String"
		resultType="cn.baisee.oa.model.DetailAccount">
		SELECT b.userid serviceID,t.Operator
		userID,t.transaction_serial_number
		transactionID,t.transaction_amount
		amount,t.trading_hours time FROM
		baisee_flow_total t LEFT JOIN
		baisee_flow_business b ON
		t.transaction_serial_number=b.transaction_serial_number
		WHERE
		b.userid=#{userID} AND b.transaction_type=#{type} ORDER BY
		t.trading_hours ;
	</select>
	<!-- 根据交易流水号查看优惠表 List<DetailAccount> selectPaymentDiscounts(String transactionID); -->
	<select id="selectPaymentDiscounts" parameterType="java.lang.String"
		resultType="cn.baisee.oa.model.DetailAccount">
		SELECT preferential_number transactionID,Discount_Amount
		amount,Preferential_type transactionType,Update_Time time from
		baisee_flow_discounts
		where transaction_serial_number=#{transactionID}
	</select>
	<!-- 根据交易流水号查看抵充表List<DetailAccount> selectFillFlowMeter(String transactionID); -->
	<select id="selectFillFlowMeter" parameterType="java.lang.String"
		resultType="cn.baisee.oa.model.DetailAccount">
		SELECT Offset_serial_number transactionID,Take_out_money
		amount,Offset_source transactionType,Offset_the_date time from
		baisee_flow_takeout
		where transaction_serial_number=#{transactionID}
	</select>
	<!--根据日期查询总账单List<DetailAccount> selectDateQueryTotalBill(String startTime, 
		String endTime); -->
	<select id="selectDateQueryTotalBill" parameterType="java.lang.String"
		resultType="cn.baisee.oa.model.DetailAccount">
		SELECT
		baisee_flow_total.transaction_serial_number transactionID,
		baisee_flow_total.Trading_hours time,
		baisee_flow_total.Transaction_amount amount,
		baisee_flow_total.Operator userID,
		baisee_flow_business.transaction_type transactionType,
		IFNULL(baisee_student.sid,baisee_student_applicants.SID) STID,
		IFNULL( baisee_student.S_NAME,baisee_student_applicants.`NAME`)remarks,
		IFNULL( CASE 
			WHEN ( baisee_class.C_TYPE='1'AND baisee_class.C_STATUS='1')THEN CONCAT(baisee_class.C_NAME,'(高中)' )
			WHEN ( baisee_class.C_TYPE='1'AND baisee_class.C_STATUS='2')THEN CONCAT(baisee_class.C_NAME,'(高中开发)' )
			WHEN ( baisee_class.C_TYPE='1'AND baisee_class.C_STATUS='3')THEN CONCAT(baisee_class.C_NAME,'(高中测试)' )
			WHEN (baisee_class.C_TYPE='0'AND baisee_class.C_STATUS='0')THEN CONCAT(baisee_class.C_NAME,'(初中试听)' )
			WHEN (baisee_class.C_TYPE='0'AND baisee_class.C_STATUS='1')THEN CONCAT(baisee_class.C_NAME,'(高中试听)' )
			WHEN (baisee_class.C_TYPE='1'AND baisee_class.C_STATUS='0')THEN CONCAT(baisee_class.C_NAME,'(初中)' )
			END,'预报名')
		as serviceID
		FROM
		baisee_flow_total
		LEFT JOIN baisee_flow_business ON
		baisee_flow_total.transaction_serial_number =
		baisee_flow_business.transaction_serial_number
		LEFT JOIN baisee_student ON baisee_flow_business.userid=baisee_student.SID
		LEFT JOIN baisee_class on baisee_student.CID=baisee_class.CID
		LEFT JOIN baisee_student_applicants ON
		baisee_flow_business.userid=baisee_student_applicants.SID
		<where>
			<if test="userid != null and userid != '' ">
				and baisee_student.s_name LIKE
				("%"#{userid,jdbcType=VARCHAR}"%")or baisee_student_applicants.name like("%"#{userid,jdbcType=VARCHAR}"%")
			</if>
			<if test="startTime != null and startTime != '' ">
				and left(baisee_flow_total.trading_hours, 8) &gt;=
				#{startTime,jdbcType=VARCHAR}
			</if>
			<if test="endTime != null and endTime != '' ">
				and left(baisee_flow_total.trading_hours, 8) &lt;=
				#{endTime,jdbcType=VARCHAR}
			</if>
			<if
				test="(startTime ==null or startTime =='') and (endTime == null or endTime == '')and(userid==null or userid=='') ">
				baisee_flow_total.Trading_hours between (SELECT DATE_ADD(now(),INTERVAL -1 MONTH)) and now()
			</if>
			<if test="type != null and type !='' ">
				and baisee_flow_business.Transaction_Type =
				#{type,jdbcType=VARCHAR}
			</if>
		</where>
		ORDER BY
		baisee_flow_total.Trading_hours DESC

	</select>
	<!--根据交易流水号查看子流水List<DetailAccount> selectDetail(String transactionID); -->
	<select id="selectDetail" parameterType="java.lang.String"
		resultMap="detailAccount">
		select * from baisee_flow_business where
		transaction_serial_number=#{transactionID}
	</select>
	<!-- 查询总交费用+优惠费用 -->
	<select id="selectTotalMoneyAndDiscounts" parameterType="java.lang.String"
		resultType="java.lang.String">
	SELECT
		SUM(a.Transaction_amount+if(isnull(c.discount_amount),0,c.discount_amount)+if(isnull(take.take_out_money),0,take.take_out_money))
		as totalMoney
		FROM
		baisee_flow_total a
		JOIN baisee_flow_business b ON a.transaction_serial_number =
		b.transaction_serial_number
		LEFT JOIN baisee_flow_discounts c ON c.transaction_serial_number =
		a.transaction_serial_number
    LEFT JOIN baisee_flow_takeout take ON a.transaction_serial_number=take.transaction_serial_number
		WHERE
		1 = 1
		AND b.Transaction_Type IN (#{tuition},#{audition})
		and b.userid = #{userID}
	</select>
</mapper>