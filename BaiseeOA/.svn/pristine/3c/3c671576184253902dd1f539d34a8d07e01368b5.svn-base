<!DOCTYPE html>
<html lang="zh" xmlns:th="http://www.thymeleaf.org">
<head th:replace="commonTemplate :: header">
    <link rel="stylesheet" type="text/css" th:href="@{css/cla_list_css.css}"/>
</head>

<body>
<div class="lyear-layout-web">
    <div class="lyear-layout-container">

        <!--左侧导航-->
        <div th:replace="commonTemplate :: leftMenus"></div>
        <!--End 左侧导航-->

        <!--头部信息-->
        <div th:replace="commonTemplate :: headerDiv"></div>

        <!--页面主要内容-->
        <main class="lyear-layout-content">

            <div class="container-fluid p-t-15">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-header">
                                <h4>菜单管理</h4>
                            </div><!--loading-text-->
                            <div class="card-body">
                                <div class="card-toolbar clearfix ">
                                    <div class="pull-right search-bar">
                                        <div class="input-group">
                                            <div class="input-group-btn">
                                                <button class="btn btn-default" type="button" aria-haspopup="true"
                                                        aria-expanded="false">
                                                    标题
                                                </button>
                                            </div>
                                            <input type="text" class="form-control" value="" id="menuName"
                                                   name="menuName" placeholder="请输入菜单名称"/>
                                            <div class="input-group-btn">
                                                <button class="btn btn-success" id="search-btn1" type="button"
                                                        onclick="loadData()" aria-haspopup="true" aria-expanded="false">
                                                    查询
                                                </button>
                                            </div>
                                        </div>

                                    </div>

                                    <!--<div id="toolbar2" class="toolbar-btn-action">
                                        &lt;!&ndash; <button type="button" class="btn btn-primary m-r-5" onclick="test()">新增</button>
                                         <button type="button" class="btn btn-primary m-r-5" onclick="test()">删除</button>
                                         <button type="button" class="btn btn-primary m-r-5" onclick="test()">修改</button>&ndash;&gt;
                                    </div>-->
                                </div>

                                <div class="container">
                                    <table id="table"></table>
                                    <br/>
                                    <button onclick="test()">选择</button>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </main>
        <!--End 页面主要内容-->
    </div>
</div>
<script type="text/javascript" th:src="@{static/js/jquery.min.js}"></script>
<script type="text/javascript" th:src="@{static/js/bootstrap.min.js}"></script>
<script type="text/javascript" th:src="@{static/js/perfect-scrollbar.min.js}"></script>
<script type="text/javascript" th:src="@{static/js/bootstrap-table/bootstrap-table.js}"></script>
<script type="text/javascript" th:src="@{static/js/bootstrap-table/bootstrap-table-zh-CN.min.js}"></script>

<!--行内编辑插件-->
<link th:href="@{static/js/x-editable/1.5.1/bootstrap3-editable/css/bootstrap-editable.min.css}" rel="stylesheet"/>
<script type="text/javascript"
        th:src="@{static/js/x-editable/1.5.1/bootstrap3-editable/js/bootstrap-editable.min.js}"></script>
<script type="text/javascript"
        th:src="@{static/js/bootstrap-table/extensions/editable/bootstrap-table-editable.min.js}"></script>

<script type="text/javascript" th:src="@{static/js/main.min.js}"></script>

<!--以下是tree-grid的使用示例-->
<link th:href="@{static/js/jquery-treegrid/jquery.treegrid.min.css}" rel="stylesheet"/>
<script type="text/javascript" th:src="@{static/js/jquery-treegrid/jquery.treegrid.min.js}"></script>
<script type="text/javascript"
        th:src="@{static/js/bootstrap-table/extensions/treegrid/bootstrap-table-treegrid.min.js}"></script>
<script type="text/javascript">
    var $table = $('#table');
    var data = JSON.parse(
        '[{"id":1,"pid":0,"status":1,"name":"用户管理","permissionValue":"open:user:manage"}]');

    $(function () {
        //控制台输出一下数据
        console.log(data);

        $table.bootstrapTable({
            data: data,
            idField: 'id',
            dataType: 'jsonp',
            columns: [
                {field: 'check', checkbox: true,
                    formatter: function (value, row, index) {
                        if (row.check == true) {
                            return {checked: true};
                        }
                    }
                },
                {field: 'name', title: '名称'},
                {field: 'id', title: '编号',
                    sortable: true,
                    align: 'center'},
                {field: 'pid', title: '所属上级'},
                {field: 'status', title: '状态',
                    sortable: true,
                    align: 'center',
                    formatter: 'statusFormatter'},
                {field: 'permissionValue',
                    title: '权限值'},
                {field: 'operate',
                    title: '操作',
                    align: 'center',
                    events: operateEvents,
                    formatter: 'operateFormatter'},
            ],

            // bootstrap-table-treegrid.js 插件配置 -- start

            //在哪一列展开树形
            treeShowField: 'name',
            //指定父id列
            parentIdField: 'pid',

            rootParentId: '0',

            onResetView: function (data) {
                //console.log('load');
                $table.treegrid({
                    initialState: 'collapsed',// 所有节点都折叠
                    // initialState: 'expanded',// 所有节点都展开，默认展开
                    treeColumn: 1,
                    // expanderExpandedClass: 'glyphicon glyphicon-minus',  //图标样式
                    // expanderCollapsedClass: 'glyphicon glyphicon-plus',
                    onChange: function () {
                        $table.bootstrapTable('resetWidth');
                    }
                });

                //只展开树形的第一级节点
                 $table.treegrid('getRootNodes').treegrid('expand');

            },
            onCheck: function (row) {
                var datas = $table.bootstrapTable('getData');
                // 勾选子类
                selectChilds(datas, row, "id", "pid", true);

                // 勾选父类
                selectParentChecked(datas, row, "id", "pid")

                // 刷新数据
                $table.bootstrapTable('load', datas);
            },

            onUncheck: function (row) {
                var datas = $table.bootstrapTable('getData');
                selectChilds(datas, row, "id", "pid", false);
                $table.bootstrapTable('load', datas);
            },
            // bootstrap-table-treetreegrid.js 插件配置 -- end
        });
    });

    // 格式化按钮
    function operateFormatter(value, row, index) {
        return [
            '<button type="button" class="RoleOfadd btn-small  btn-primary" style="margin-right:15px;"><i class="fa fa-plus" ></i>&nbsp;新增</button>',
            '<button type="button" class="RoleOfedit btn-small   btn-primary" style="margin-right:15px;"><i class="fa fa-pencil-square-o" ></i>&nbsp;修改</button>',
            '<button type="button" class="RoleOfdelete btn-small   btn-primary" style="margin-right:15px;"><i class="fa fa-trash-o" ></i>&nbsp;删除</button>'
        ].join('');

    }

    // 格式化类型
    function typeFormatter(value, row, index) {
        if (value === 'menu') {
            return '菜单';
        }
        if (value === 'button') {
            return '按钮';
        }
        if (value === 'api') {
            return '接口';
        }
        return '-';
    }

    // 格式化状态
    function statusFormatter(value, row, index) {
        if (value === 1) {
            return '<span class="label label-success">正常</span>';
        } else {
            return '<span class="label label-default">锁定</span>';
        }
    }

    //初始化操作按钮的方法
    window.operateEvents = {
        'click .RoleOfadd': function (e, value, row, index) {
            add(row.id);
        },
        'click .RoleOfdelete': function (e, value, row, index) {
            del(row.id);
        },
        'click .RoleOfedit': function (e, value, row, index) {
            update(row.id);
        }
    };
</script>
<script>
    /**
     * 选中父项时，同时选中子项
     * @param datas 所有的数据
     * @param row 当前数据
     * @param id id 字段名
     * @param pid 父id字段名
     */
    function selectChilds(datas, row, id, pid, checked) {
        for (var i in datas) {
            if (datas[i][pid] == row[id]) {
                datas[i].check = checked;
                selectChilds(datas, datas[i], id, pid, checked);
            }
            ;
        }
    }

    function selectParentChecked(datas, row, id, pid) {
        for (var i in datas) {
            if (datas[i][id] == row[pid]) {
                datas[i].check = true;
                selectParentChecked(datas, datas[i], id, pid);
            }
            ;
        }
    }


    function add(id) {
        alert("add 方法 , id = " + id);
    }

    function del(id) {
        alert("del 方法 , id = " + id);
    }

    function update(id) {
        alert("update 方法 , id = " + id);
    }
</script>
</body>
</html>