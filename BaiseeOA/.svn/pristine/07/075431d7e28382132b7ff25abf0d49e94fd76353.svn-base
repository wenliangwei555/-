<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


	<!-- 配置SFTP服务器信息 01 -->
	<bean id="sftpConfig01" class="cn.baisee.oa.core.file.SSHParamModel">
		<property name="serverType" value="${file.server.type}" />
		<property name="host" value="${file.server.host}" />
		<property name="port" value="${file.server.port}" />
		<property name="userName" value="${file.server.user}" />
		<property name="password" value="${file.server.password}" />
	</bean>

	<!-- video配置SFTP服务器信息02  -->
	<bean id="sftpConfig02" class="cn.baisee.oa.core.file.SSHParamModel">
		<property name="serverType" value="${video.file.server.type}" />
		<property name="host" value="${video.file.server.host}" />
		<property name="port" value="${video.file.server.port}" />
		<property name="userName" value="${video.file.server.user}" />
		<property name="password" value="${video.file.server.password}" />
	</bean>

	 <bean id="fileConnParamLoad"
		class="cn.baisee.oa.core.context.FileConnParamLoadHelper">
		<!--
		<constructor-arg type="java.lang.String" value="sftpConfig01" />
		 -->
		<constructor-arg>
			<map>
				<entry key="sftpConfig01" value-ref="sftpConfig01" />
				<entry key="sftpConfig02" value-ref="sftpConfig02" />
			</map>
		</constructor-arg>
	</bean>

	<!-- 初始化FileContext上下文 -->
	  <bean class="cn.baisee.oa.core.context.FileContext">
		<constructor-arg type="java.lang.String" value="F:/test/" />
		<constructor-arg type="java.util.Set">
			<set>
				<ref bean="sftpConfig01" />
				<ref bean="sftpConfig02" />
			</set>
		</constructor-arg>
		<constructor-arg type="java.util.HashMap">
			<map>
				<entry key="sftpConfig01" value="${file.upload.root}" />
				<entry key="sftpConfig02" value="${video.file.upload.root}" />
			</map>
		</constructor-arg>
	</bean>




	<!--  ====================== 分布式事务配置 START ============================= -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout">
			<value>3000</value>
		</property>
	</bean>

	<bean id="springJTATransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
	</bean>

	<aop:config>
		<aop:pointcut id="serviceOperation"
			expression="execution(* cn.baisee.oa.service..*.*.*(..)) or execution(* cn.baisee.oa.controller..*.*.*(..))" />
		<aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice" />
	</aop:config>

	<!-- 通知配置 -->
	<tx:advice id="txAdvice" transaction-manager="springJTATransactionManager">
		<tx:attributes>
			<tx:method name="*"
				rollback-for="Exception,RuntimeException,cn.baisee.oa.exception.BaseException,cn.baisee.oa.exception.DaoException,cn.baisee.oa.exception.OAServiceException" />
		</tx:attributes>
	</tx:advice>

	<!-- ========================= 分布式事务配置 END =========================== -->

</beans>
