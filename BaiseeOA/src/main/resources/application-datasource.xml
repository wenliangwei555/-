<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">
    
 
	<bean id="baiseeDatasource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="baiseeDatasource" />
		<property name="xaDataSourceClassName" value="${jdbc.driverClassName}" />
		<property name="xaProperties">
			<props>
				<prop key="url">${baisee.jdbc.url}</prop>
				<prop key="user">${baisee.jdbc.username}</prop>
				<prop key="password">${baisee.jdbc.password}</prop>
			</props>
		</property>
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="borrowConnectionTimeout" value="${jdbc.borrowConnectionTimeout}" />
		<property name="testQuery" value="${jdbc.testQuery}" />
		<property name="maintenanceInterval" value="${jdbc.maintenanceInterval}" />
	</bean>
	

	<bean id="baiseeSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="baiseeDatasource" />
		<property name="configLocation" value="classpath:sql.cfg.xml" />
		<property name="mapperLocations">
			<list>
				<!-- 配置MyBaties影射文件 -->
				<value>classpath:/mapper/baisee/*Mapper.xml</value>
				<value>classpath:/mapper/repairReceive/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	
	
	<bean id="pasDatasource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="pasDatasource" />
		<property name="xaDataSourceClassName" value="${jdbc.driverClassName}" />
		<property name="xaProperties">
			<props>
				<prop key="url">${pas.jdbc.url}</prop>
				<prop key="user">${pas.jdbc.username}</prop>
				<prop key="password">${pas.jdbc.password}</prop>
			</props>
		</property>
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="borrowConnectionTimeout" value="${jdbc.borrowConnectionTimeout}" />
		<property name="testQuery" value="${jdbc.testQuery}" />
		<property name="maintenanceInterval" value="${jdbc.maintenanceInterval}" />
	</bean>
	

	<bean id="pasSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="pasDatasource" />
		<property name="configLocation" value="classpath:sql.cfg.xml" />
		<property name="mapperLocations">
			<list>
				<!-- 配置MyBaties影射文件 -->
				<value>classpath:/mapper/pas/*Mapper.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="baiseewDatasource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="baiseewDatasource" />
		<property name="xaDataSourceClassName" value="${jdbc.driverClassName}" />
		<property name="xaProperties">
			<props>
				<prop key="url">${baiseew.jdbc.url}</prop>
				<prop key="user">${baiseew.jdbc.username}</prop>
				<prop key="password">${baiseew.jdbc.password}</prop>
			</props>
		</property>
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="borrowConnectionTimeout" value="${jdbc.borrowConnectionTimeout}" />
		<property name="testQuery" value="${jdbc.testQuery}" />
		<property name="maintenanceInterval" value="${jdbc.maintenanceInterval}" />
	</bean>
	

	<bean id="baiseewSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="baiseewDatasource" />
		<property name="configLocation" value="classpath:sql.cfg.xml" />
		<property name="mapperLocations">
			<list>
				<!-- 配置MyBaties影射文件 -->
				<value>classpath:/mapper/baiseew/*Mapper.xml</value>
			</list>
		</property>
	</bean>

	<bean id="stuDatasource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="stuDatasource" />
		<property name="xaDataSourceClassName" value="${jdbc.driverClassName}" />
		<property name="xaProperties">
			<props>
				<prop key="url">${stu.jdbc.url}</prop>
				<prop key="user">${stu.jdbc.username}</prop>
				<prop key="password">${stu.jdbc.password}</prop>
			</props>
		</property>
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="borrowConnectionTimeout" value="${jdbc.borrowConnectionTimeout}" />
		<property name="testQuery" value="${jdbc.testQuery}" />
		<property name="maintenanceInterval" value="${jdbc.maintenanceInterval}" />
	</bean>
	

	<bean id="stuSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="stuDatasource" />
		<property name="configLocation" value="classpath:sql.cfg.xml" />
		<property name="mapperLocations">
			<list>
				<!-- 配置MyBaties影射文件 -->
				<value>classpath:/mapper/stu/*Mapper.xml</value>
			</list>
		</property>
	</bean>


	<bean id="baiseeCardDatasource" class="org.apache.commons.dbcp.BasicDataSource"
		 destroy-method="close">
		<property name="driverClassName" value="${card.jdbc.driverClassName}" />
		<property name="url" value="${card.jdbc.url}" />
		<property name="username" value="${card.jdbc.username}"/>
		<property name="password" value="${card.jdbc.password}"/>
	</bean>
	

	<bean id="baiseeCardSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="baiseeCardDatasource" />
		<property name="configLocation" value="classpath:sql.cfg.xml" />
		<property name="mapperLocations">
			<list>
				<!-- 配置MyBaties影射文件 -->
				<value>classpath:/mapper/card/*Mapper.xml</value>
			</list>
		</property>
	</bean>


	<bean id="sqlSessionTemplate"
		class="cn.baisee.oa.core.datasource.MultipleSqlSessionTemplate">
		<constructor-arg ref="baiseeSqlSessionFactory" />
		<property name="targetSqlSessionFactory">
			<map>
				<entry value-ref="baiseeSqlSessionFactory" key="baiseeDatasource" />
				<entry value-ref="pasSqlSessionFactory" key="pasDatasource" />
				<entry value-ref="baiseewSqlSessionFactory" key="baiseewDatasource" />
				<entry value-ref="stuSqlSessionFactory" key="stuDatasource" />
				<entry value-ref="baiseeCardSqlSessionFactory" key="baiseeCardDatasource" />
			</map>
		</property>
	</bean>


	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="cn.baisee.oa.dao" />
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate" />
	</bean>


	<bean id="dataSourceMethodInterceptor"
		class="cn.baisee.oa.core.interceptor.DatasourceMethodInterceptor" />
	<aop:config>
		<aop:pointcut id="service"
			expression="execution(* cn.baisee.oa.dao.*.*.*(..))" />
		<aop:advisor advice-ref="dataSourceMethodInterceptor"
			pointcut-ref="service" order="1" />
	</aop:config>

</beans>
