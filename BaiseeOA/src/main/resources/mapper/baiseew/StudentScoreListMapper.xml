<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.baisee.oa.dao.baiseew.StudentScoreListMapper">
	<resultMap id="StudentScoreListMap"
		type="cn.baisee.oa.model.StudentScore">
		<id property="id" column="ID"></id>
		<result property="sid" column="SID"></result>
		<result property="classId" column="CLASSID"></result>
		<result property="sname" column="SNAME" />
		<result property="cname" column="CName" />
		<result property="s_type" column="S_TYPE"></result>
		<result property="term" column="TERM"></result>
		<result property="tid" column="tid"></result>
		<result property="subject" column="SUBJECT"></result>
		<result property="score" column="SOCER"></result>
		<result property="ispublish" column="ISPUBLISH" />
		<result property="updateTime" column="updateTime" />
		<result property="rank" column="rank" />
	</resultMap>
	<resultMap id="StuScoreDescMap" type="cn.baisee.oa.model.StudentScore">
        <result property="subject" column="SUBJECT" ></result>
        <result property="score" column="scoer" ></result>
        <result property="rank" column="rank" ></result>
    </resultMap>
    
    <select id="selectScoer" parameterType="java.util.Map"
		resultMap="StudentScoreListMap">
	SELECT * FROM (SELECT *,
@curRank := @curRank + 1 as rank
FROM (SELECT s.*,t.des
FROM baisee_score s,baisee_term t
WHERE s.TERM = t.term AND s.CLASSID = t.cid AND s.classid = #{classId} AND t.term = #{term}  AND subject=#{subject}
GROUP BY sname  ORDER BY s.scoer DESC ) s1,(SELECT @curRank :=0) q) a WHERE a.sid = #{sid} GROUP BY subject
	</select>
	
	<select id="getScoerBysid" parameterType="java.util.Map" resultMap="StudentScoreListMap">
SELECT DISTINCT any_value(s.id),any_value(s.sid),any_value(s.sname),any_value(s.classid),any_value(s.cname),any_value(s.s_type),any_value(s.term),s.subject,any_value(s.scoer),any_value(s.ispublish),any_value(s.updatetime),any_value(t.des)
FROM baisee_score s,baisee_term t
WHERE s.TERM = t.term AND s.CLASSID = t.cid AND s.classid = #{classId} AND t.des =  #{des} and sid = #{sid}  and t.term = #{term}
GROUP BY subject ORDER BY any_value(s.scoer) DESC
	</select>
	
	<select id="getSidByClass" parameterType="java.util.Map" resultType="String">
SELECT any_value(sid) FROM baisee_score s,baisee_term t WHERE s.classId = #{classId} AND t.des = #{des} and t.term = #{term}
GROUP BY sname
	</select>
	
	<select id="getClassIdBySid" parameterType="String" resultType="String">
		SELECT DISTINCT classid FROM baisee_score WHERE sid = #{sid}
	</select>
	
	<select id="getTermBySid" parameterType="String" resultType="String">
		SELECT DISTINCT term FROM baisee_score WHERE sid = #{sid}
	</select>
	
	<select id="getSubjectBySid" parameterType="String" resultType="String">
		SELECT DISTINCT subject FROM baisee_score WHERE sid =#{sid}
	</select>
    
	
	<select id="selectBySid" parameterType="java.util.Map"
		resultMap="StudentScoreListMap">
	select sid,dsc as term,term as tid,scoer as score,pai-tong as rank,updateTime from ( 
		select scoer_tmp.sid,scoer_tmp.term,updateTime,scoer_tmp.dsc,scoer_tmp.scoer,@rownum:=@rownum+1 ,
		if(@pdept=scoer_tmp.term AND @salary=scoer_tmp.scoer,@tong:=@tong+1,@tong:=0) as tong,
		if(@pdept=scoer_tmp.term ,@pai:=@pai+1,@pai:=1) as pai,
 		@pdept:=scoer_tmp.term, @salary:=scoer_tmp.scoer from (
			select t1.sid , t1.term ,t1.dsc, t1.scoer,DATE_FORMAT(updateTime ,'%Y-%m-%d') as updateTime from (select  max(s.updateTime)  as updateTime,s.sid ,(select t.des from baisee_term t where t.cid=s.CLASSID and t.term=s.TERM) as dsc,s.term, SUM(s.scoer) as SCOER  
		from baisee_score s 	
		<where> 
		 s.CLASSID=#{classId}
		 </where>
		  group by s.term,s.sid) t1  order by t1.TERM asc ,t1.scoer desc
 			) scoer_tmp , (select @rownum :=0 , @pdept := null,@pai:=0,@tong:=0) 
		a ) result 
		<where> 
			sid=#{sId}  
		</where>
		order by updateTime DESC
	
	</select>
	
	
	
    <select id="selectDescBySid"  parameterType="java.util.Map"  resultMap="StuScoreDescMap">
    select scoer,subject,pai-tong as rank from ( 
			select scoer_tmp.sid,scoer_tmp.scoer,scoer_tmp.subject,@rownum:=@rownum+1 , 
		if(@pdept=scoer_tmp.subject AND @salary=scoer_tmp.scoer,@tong:=@tong+1,@tong:=0) as tong,
		if(@pdept=scoer_tmp.subject ,@pai:=@pai+1,@pai:=1) as pai,

			 @pdept:=scoer_tmp.subject, @salary:=scoer_tmp.scoer from (
		select t.sid,t.subject,t.scoer from baisee_score t
		<where>
			 t.term =  #{term} and t.classid=#{classId}
		</where>
			 order by t.subject asc,t.scoer desc 
 			) scoer_tmp , (select @rownum :=0 , @pdept := null ,@pai:=0,@tong:=0) 
			a ) result
		<where> 
			sid=#{sId}
		</where>
	</select>
</mapper>