<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.baisee.oa.dao.stu.BaiseeItemBankMapper">

	<resultMap type="cn.baisee.oa.model.examination.BaiseeItemBank" id="itemBankAttribute">
		<id column="i_id" property="iId"/>							<!-- 主键 -->
		<result column="subject" property="subject"/>				<!-- 题目 -->
		<result column="select_one" property="selectOne"/>			<!-- 选择一 -->
		<result column="select_two" property="selectTwo"/>			<!-- 选择二 -->
		<result column="select_three" property="selectThree"/>		<!-- 选择三 -->
		<result column="select_four" property="selectFour"/>		<!-- 选择四 -->
		<result column="answer" property="answer"/>					<!-- 答案 -->
		<result column="project_analysis" property="projectAnalysis"/><!-- 课题分析 -->
		<result column="did" property="did"/>						<!-- 字典 -->
		<result column="create_name" property="createName"/>		<!-- 创建人 -->
		<result column="createTs" property="createTs"/>				<!-- 创建时间 -->
		<result column="updateTs" property="updateTs"/>				<!-- 更新时间 -->
	</resultMap>

	<!-- 根据Id查询选中的试题 -->
	<select id="getCheckitemBankById" resultMap="itemBankAttribute" parameterType="java.util.List">
		select <include refid="attribute"></include>
		from baisee_s_itembank
			<where> 
				i_id in 
				<foreach collection="list" open="(" close=")" separator="," index="i" item="iId">
					#{iId}
				</foreach>
			</where>
	</select>
	
	<select id="getCheckCountItemBankById" resultType="int" parameterType="java.util.List">
		select count(1)
		from baisee_s_itembank
			<where> 
				i_id in 
				<foreach collection="list" open="(" close=")" separator="," index="i" item="iId">
					#{iId}
				</foreach>
			</where>
	</select>
	
	<!-- 根据tid查询题目的数量 -->
	<select id="getItemBankCount" resultType="int" parameterType="String">
		select count(1) from baiss_s_itembank_testpaper where t_id=#{tid}
	</select>
	
	
	<sql id="attribute">
		i_id, `subject`, select_one, select_two, select_three, select_four, answer, 
			project_analysis, did, create_name, createTs, updateTs, sort
	</sql>
	
	<!-- 查询所有试题 -->
	<select id="selectitemBankList" resultMap="itemBankAttribute" parameterType="map">
		select <include refid="attribute"></include>
		from baisee_s_itembank
		<where>
			1=1
			<if test="dictId != '' and dictId != null">
				and did = #{dictId}
			</if>
			<if test="empId  != '' and empId != null">
				and create_name = #{empId}
			</if>
			<if test="itemlableSearch != '' and itemlableSearch != null">
				and subject like '%' #{itemlableSearch} '%'
			</if>
			order by createTs desc, updateTs desc, `subject`
		</where>
	</select>
	<!-- 根据Id查询试题 -->
	<select id="getitemBankById" resultMap="itemBankAttribute" parameterType="String">
		select <include refid="attribute"></include>
		from baisee_s_itembank
		<where>
			i_id = #{iId}
		</where>
	</select>
	
	<!-- 新增的时候 查看题目是否存在一样的 -->
	<select id="getitemBankBySubject" parameterType="String" resultType="Integer">
		select count(1) from baisee_s_itembank where `subject` = #{subject}
	</select>
	
	<!-- 新增试题 -->
	<insert id="saveitemBank" parameterType="cn.baisee.oa.model.examination.BaiseeItemBank">
		insert into baisee_s_itembank (i_id, `subject`, select_one, select_two, select_three, 
								select_four, answer, project_analysis, did, create_name, createTs, updateTs, sort) 
		values ( #{iId}, #{subject}, #{selectOne}, #{selectTwo}, #{selectThree}, #{selectFour}, 
				#{answer}, #{projectAnalysis}, #{did}, #{createName}, DATE_FORMAT(now(),'%Y%m%d%H%i%m'), DATE_FORMAT(now(),'%Y%m%d%H%i%m'), 0)
	</insert>
	
	<!-- 修改的时候（排除自己）   查询题目是否存在一样的 -->
	<select id="getitemBankBySubject1"  parameterType="map" resultType="Integer">
		select count(1) from baisee_s_itembank where `subject` = #{subject} and i_id != #{iId}
	</select>
	
	<!-- 修改试题 -->
	<update id="updateItemBank" parameterType="cn.baisee.oa.model.examination.BaiseeItemBank">
		update baisee_s_itembank
		<set>
			<if test="subject != '' and subject != null">
				subject = #{subject},
			</if>
			<if test="selectOne != '' and selectOne != null">
				select_one = #{selectOne},
			</if>
			<if test="selectTwo != '' and selectTwo != null">
				select_two = #{selectTwo},
			</if>
			<if test="selectThree != '' and selectThree != null">
				select_three = #{selectThree},
			</if>
			<if test="selectFour != '' and selectFour != null">
				select_four = #{selectFour},
			</if>
			<if test="answer != '' and answer != null">
				answer = #{answer},
			</if>
			<if test="projectAnalysis != '' and projectAnalysis != null">
				project_analysis = #{projectAnalysis},
			</if>
			<if test="did != '' and did != null">
				did = #{did},
			</if>
			createTs = DATE_FORMAT(now(),'%Y%m%d%H%i%m')
			<where>
				i_id = #{iId}
			</where>
		</set> 
	</update>
	
	<!-- 查询试题是否被试卷使用着 -->
	<select id="selectItembankTestpaper" parameterType="String" resultType="cn.baisee.oa.model.examination.BaiseeItembankTestpaper">
		select  t_id tId, i_id iId, updateTs updateTs, createTs createTs, sort sort
			 from baiss_s_itembank_testpaper
		<where>
			i_id = #{ids}
		</where>
	</select>
	
	<!-- 批量删除试题 -->
	<delete id="delitemBankById" parameterType="String">
		delete from baisee_s_itembank where i_id =
				#{ids}
	</delete>
	
	<!-- 根据试卷Id查询试卷对应的所有试题 -->
	<select id="selectItemBankListById" parameterType="String" resultMap="itemBankAttribute">
		select 
			<include refid="attribute"></include>
			 from baisee_s_itembank 
		<where>
			 i_id in(
				select i_id from baiss_s_itembank_testpaper 
				<where>
					 t_id = #{tid} order by sort
				</where>
			)
		</where>
	</select>
	
	<!-- 根据类型查询详细试题 	(类型:语文,数学.数据库。。。)	-->
	<select id="selectTypeQuery" parameterType="String" resultMap="itemBankAttribute">
		select <include refid="attribute"/> 
		 from baisee_s_itembank 
		<where>
			did = #{did}
		</where>
	</select>
	
	<select id="selectTypeQuery1" parameterType="map" resultMap="itemBankAttribute">
		select <include refid="attribute"/> 
		 from baisee_s_itembank 
		<where>
			did = #{did}
			and i_id not in
			<foreach collection="iIds" open="(" separator="," close=")" index="i" item="iIds">
				#{iIds}
			</foreach>
		</where>
	</select>
	
</mapper>