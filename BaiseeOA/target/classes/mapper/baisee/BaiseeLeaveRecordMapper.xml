<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.baisee.oa.dao.baisee.BaiseeLeaveRecordMapper">
    <!--
        学生请假展示
    -->
    <select id="getDateQueryTotalBill" resultType="cn.baisee.oa.model.BaiseeLeaveRecord">
        select baisee_leave_record.*,
        CASE
        WHEN C_STATUS = '1' THEN CONCAT(C_NAME, '(高中)')
        WHEN C_STATUS = '2' THEN CONCAT(C_NAME, '(高中开发)')
        WHEN C_STATUS = '3' THEN CONCAT(C_NAME, '(高中测试)')
        WHEN C_STATUS = '0' THEN CONCAT(C_NAME, '(初中)')
        END as c_name
        from  baisee_leave_record
        join baisee_class on baisee_leave_record.class_no=baisee_class.CID
        join baisee_role_user on baisee_role_user.USER_ID = #{check_user}
        <where>
            <if test="student_name != null">
                student_name LIKE "%"#{student_name}"%"
            </if>
            <if test="type != null and type != '' and type != 0">
                and type = #{type}
            </if>
            <if test="check_user_name != null and check_user_name != ''">
                and check_user_name LIKE "%"#{check_user_name}"%"
            </if>
            <if test="start_time != null and start_time != ''">
                and start_time &gt;= #{start_time}
            </if>
            <if test="end_time != null and end_time != ''">
                and end_time &lt;= #{end_time}
            </if>
            <if test="status != null and status != '' and status != 0">
                and status = #{status}
            </if>
            <if test="c_name != null and c_name != ''">
                and c_name = #{c_name}
            </if>
                and (baisee_role_user.ROLE_ID = "OA20190110094050339" or baisee_class.C_TEACHER_NUMBER = #{check_user})

        </where>
        order by create_time desc
    </select>

    <!--
        学生请假审批页面数据
    -->
    <select id="getId" resultType="cn.baisee.oa.model.BaiseeLeaveRecord">
        select * from baisee_leave_record where id = #{id}
    </select>
    <!--
           学生请假审批
    -->
    <update id="toreceive">
        update
        baisee_leave_record
        set
        status = #{status},check_user=#{check_user},check_user_name=#{check_user_name},check_time=#{check_time},reject_reason=#{reject_reason}
        where id = #{id}
    </update>


    <!--
            学生请假统计
    -->
    <select id="getSumLeave" resultType="cn.baisee.oa.model.BaiseeLeaveRecord">
        select
        student_no,student_name,sum(days) as days , count(student_no) as sumLeave,
        CASE
        WHEN C_STATUS = '1' THEN CONCAT(C_NAME, '(高中)')
        WHEN C_STATUS = '2' THEN CONCAT(C_NAME, '(高中开发)')
        WHEN C_STATUS = '3' THEN CONCAT(C_NAME, '(高中测试)')
        WHEN C_STATUS = '0' THEN CONCAT(C_NAME, '(初中)')
        END as c_name
        from baisee_leave_record join baisee_class on baisee_leave_record.class_no=baisee_class.CID
        <where>
            <if test="student_name != null">
                student_name LIKE "%"#{student_name}"%"
            </if>
            <if test="class_no != null">
                and class_no LIKE "%"#{class_no}"%"
            </if>
            <if test="start_time != null and start_time != ''">
                and start_time like "%"#{start_time}"%"
            </if>
            <if test="c_name != null and c_name != ''">
                and c_name = #{c_name}
            </if>
                and status = 2
        </where>
        group by student_no, student_name, C_STATUS, c_name
        order by days desc,sumLeave desc
    </select>

    <!--<select id="findReceive" resultType="int">
        select count(*)
        from
        baisee_leave_record
        join baisee_class on baisee_leave_record.class_no=baisee_class.CID
        join baisee_role_user on baisee_role_user.USER_ID = #{check_user}
        where baisee_role_user.ROLE_ID = 'OA20190110094050339'
    </select>

    <select id="findReceive1" resultType="int">
        select count(*)
        from
        baisee_leave_record
        join baisee_class on baisee_leave_record.class_no=baisee_class.CID
        join baisee_role_user on baisee_role_user.USER_ID = #{check_user}
    </select>-->
    <select id="getOpenId" resultType="java.lang.String">
        select OPEN_ID from baiseew.baisee_wechat where USER_ID=#{student_no};
    </select>


    <select id="getBaiseeAToken" resultType="java.lang.String">
        select access_token from baisee_access_token
    </select>

</mapper>
